rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User profiles can only be read by the user or admin
    // Only the user themselves can write to their profile
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if request.auth != null && (request.auth.uid == userId || isAdmin());
    }
    
    // Function to check if the current user is an admin
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Basic validation for user profiles
    function isValidUserProfile(userData) {
      return userData.size() < 1000
        && userData.keys().hasAll(['id', 'email', 'displayName', 'createdAt', 'updatedAt'])
        && userData.id is string
        && userData.email is string
        && userData.displayName is string
        && userData.createdAt is number
        && userData.updatedAt is number;
    }
    
    // Custom collection rules can be added here
    match /{collection}/{document=**} {
      allow read, write: if false; // Default deny all
    }
  }
} 